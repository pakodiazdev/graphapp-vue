####### Project and Port Configurations ######
#
# These configurations define the project naming and port settings for
# running and accessing different parts of the application. They ensure
# consistency across Docker Compose services and simplify access to the
# development environment.

# COMPOSE_PROJECT_NAME:
#
# Name for the Docker Compose project. This helps organize the containers,
# networks, and volumes under a common name in Docker Desktop and CLI:

COMPOSE_PROJECT_NAME=graph-app-messenger

# PROJECT_PREFIX:
#
# Prefix for frontend-related services in the project. This helps differentiate
# the frontend services and containers, making it easier to identify and manage them:

PROJECT_PREFIX=chat-frontend

# VUE_DEV_PORT:
#
# Port for accessing the Vue.js development server. This port should be used
# when running the frontend in development mode:

VUE_DEV_PORT=8085

# APP_WEB_DIST_PORT:
#
# Port for accessing the compiled frontend application in distribution/production mode:

APP_WEB_DIST_PORT=8086

# SERVER_MODE:
#
# This variable is used to start the yarn server automatically within the container. 
# Typically, you would run 'yarn serve' or 'npm run serve' to start the Vue project,
# but with this setup, the container will handle it for you.
#
# If you are working with Cypress and need support for testing, use 'test:dev' 
# to start the project with both Cypress and the yarn server. Then, you can enter
# the container via VNC and run the tests.
#
# If you are running tests that call mocked or fake APIs, you can use 'test:mocked'.
#
# If you do not want to start the yarn server, use 'none'. You can still enter the
# container via VNC or 'docker exec' to perform manual operations.
#
# Options: test:dev | serve | test:mocked | none

SERVER_MODE=test:dev

# DIST_MONGO_DB:
#
# Port used to connect to the MongoDB database in the distribution
# environment. This setting ensures that the application connects to
# the correct port when accessing the database in production:

DIST_MONGO_DB=27017

# DIST_WS_PORT:
#
# Port used to establish WebSocket connections for real-time communication.
# This port will handle WebSocket traffic, supporting features like chat
# messages and live updates:

DIST_WS_PORT=4000

####### Ports for VNC and noVNC ######
#
# These configurations are used to set up a VNC server and a noVNC server to
# access the container via a browser. They are used to run and build
# Cypress tests in the container.
# 
# They provide a GUI to the container and an easy setup.

# For VNC client:
DEV_VNC_PORT=5901

# For web browser client (noVNC):
DEV_NO_VNC_PORT=6901

# Password for VNC connection:
# Change it !! for more security
DEV_VNC_PW=vncsecret

# Resolution for VNC display:
VNC_RESOLUTION=1820x880
